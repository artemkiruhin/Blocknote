@page "/NotePage"
@using Blocknote.Core.Models.Dtos
@using Blocknote.Core.Services.Entity
@using Blocknote.Core.Services.Jwt
@inject NoteService NoteService
@inject JwtService JwtService
@inject NavigationManager NavigationManager

<div class="container">
    @if (Notes.Any())
    {
        foreach (var note in Notes)
        {
            <NoteCard 
                Model="note" 
                OnNoteDeleted="RefreshNotes" 
                class="note-item" />
        }
    }
    else
    {
        <div class="empty-state">
            <p>Заметок пока нет</p>
        </div>
    }
</div>

@code {
    private List<NoteDto> Notes { get; set; } = new();
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var token = await SecureStorage.Default.GetAsync("jwt");
            if (string.IsNullOrEmpty(token))
            {
                NavigationManager.NavigateTo("auth");
                return;
            }

            var userId = JwtService.GetUserId(token);
            if (userId == Guid.Empty)
            {
                ErrorMessage = "Ошибка авторизации. Пожалуйста, выполните вход.";
                return;
            }

            Notes = await NoteService.GetAllAsync(userId) as List<NoteDto> ?? [];
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Ошибка загрузки заметок: {ex.Message}";
            Console.WriteLine(ErrorMessage);
        }
    }

    private async Task RefreshNotes()
    {
        try
        {
            var token = await SecureStorage.Default.GetAsync("jwt");
            if (!string.IsNullOrEmpty(token))
            {
                var userId = JwtService.GetUserId(token);
                if (userId != Guid.Empty)
                {
                    Notes = await NoteService.GetAllAsync(userId) as List<NoteDto> ?? [];
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка обновления заметок: {ex.Message}");
        }
    }
}